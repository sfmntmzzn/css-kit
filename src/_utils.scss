@use 'sass:math';
@use 'sass:string';
@use 'variables';

/// Generated the name for a variables as acustom
/// CSS property.
///
/// @param {string} $name
///   The base name for the variable.
/// @param {string} $prefix
///   A optional prefix for the variable name.
/// @param {string} $suffix
///   A optional suffix for the variable name.
/// @returns {string}
///   The generated variable name.
@function css-var($name, $prefix: '', $suffix: '') {
  $result: $name;
  @if string.length($prefix) >= 1 {
    $result: #{$prefix}-#{$result};
  }
  @if string.length($suffix) >= 1 {
    $result: #{$result}-#{$suffix};
  }
  @if string.length(variables.$css-var-namespace) >= 1 {
    @return --#{variables.$css-var-namespace}-#{$result};
  } @else {
    @return --#{$result};
  }
}

/// Adds two values together, or generates a `calc(...)'
/// expression if the units dont match.
///
/// @param {any} $left
///   The left operand for the addition.
/// @param {any} $right
///   The right operand for the addition.
/// @return {any}
///   The generated or reduced expression for the addition.
@function add($left, $right) {
  @if math.compatible($left, $right) {
    @return $left + $right;
  } @else {
    @return calc(#{$left} + #{$right});
  }
}

/// Subtracts two values, or generates a `calc(...)'
/// expression if the units dont match.
///
/// @param {any} $left
///   The left operand for the subtraction.
/// @param {any} $right
///   The right operand for the subtraction.
/// @return {any}
///   The generated or reduced expression for the subtraction.
@function subtract($left, $right) {
  @if math.compatible($left, $right) {
    @return $left - $right;
  } @else {
    @return calc(#{$left} - #{$right});
  }
}
